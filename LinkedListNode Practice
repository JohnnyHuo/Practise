class LinkedListNode
{
//    public Object data;
//    public LinkedListNode next;
//
//    public LinkedListNode(Object data) {
//      this.data = data;
//    }
    
    LinkedListNode next = null;
	int data;

	public LinkedListNode(int d) {
		data = d;
	}
	
	void appendToTail(int d){
		LinkedListNode end = new LinkedListNode(d);
		LinkedListNode n = this;
		while(n.next != null){
			n = n.next;	
		}
		n.next = end;
    }
    
    
    public static void main(String[] args) 
    {
//        LinkedListNode node_1 = new LinkedListNode("first");        
//        LinkedListNode node_2 = new LinkedListNode("second");
//        node_1.next = node_2;
//        LinkedListNode node_3 = new LinkedListNode("third");
//        node_2.next = node_3;
    	LinkedListNode node_1 = new LinkedListNode(1);        
        LinkedListNode node_2 = new LinkedListNode(2);
        node_1.next = node_2;
        LinkedListNode node_3 = new LinkedListNode(3);
        node_2.next = node_3;

        System.out.println("*** Print contents of linked list");
        LinkedListNode  current = node_1;
        while (current != null) {
            System.out.println(current.data);
            current = current.next;
        }

        System.out.println("*** Print contents of linked list from node_2");
        current = node_2;
        while (current != null) {
            System.out.println(current.data);
            current = current.next;
        }
        
        System.out.println("***Now appendToTail0001");
        
        node_1.appendToTail(10);
        current = node_1;
        while (current != null) {
            System.out.println(current.data);
            current = current.next;
        }
        System.out.println("***Now appendToTail0002");

        node_2.appendToTail(20);
        current = node_1;
        while (current != null) {
            System.out.println(current.data);
            current = current.next;
        }
        System.out.println("***Now appendToTail0003");

        node_3.appendToTail(30);
        current = node_1;
        while (current != null) {
            System.out.println(current.data);
            current = current.next;
        }
        System.out.println("*** Now delete second node");
        deleteNode(node_2);

        System.out.println("*** Print after deleting second node");
        current = node_1;
        while (current != null) {
            System.out.println(current.data);
            current = current.next;
        }
    }

    public static boolean deleteNode(LinkedListNode n) 
    {
        if (n == null || n.next == null) {
            return false; // Failure
        }
        LinkedListNode next = n.next;
        n.data = next.data;
        n.next = next.next;
        return true;
    }
}

